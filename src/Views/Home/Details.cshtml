@model VehicleMaintenanceInvoiceSystem.Models.InvoiceDetailsDto

@{
    ViewData["Title"] = $"Invoice {Model?.InvoiceNumber}";
}

<div class="row">
    <div class="col-12">
        @if (ViewBag.Error != null)
        {
            <div class="alert alert-danger">
                <h4><i class="fas fa-exclamation-triangle me-2"></i>Error Loading Invoice Details</h4>
                <p><strong>@ViewBag.Error</strong></p>
                
                @if (ViewBag.ErrorDetails != null)
                {
                    <hr />
                    <details>
                        <summary><strong>Technical Details (for debugging)</strong></summary>
                        <pre class="mt-2 p-2 bg-light border rounded" style="font-size: 0.8em; max-height: 300px; overflow-y: auto;">@ViewBag.ErrorDetails</pre>
                    </details>
                }
                
                <hr />
                <div class="mt-3">
                    <h5>Possible Solutions:</h5>
                    <ul>
                        <li>If this is a "casting" or "decimal" error, the database schema needs to be updated</li>
                        <li>Run the database fix script to convert integer columns to decimal columns</li>
                        <li>Check the application logs for more details</li>
                    </ul>
                    <a href="/" class="btn btn-primary">‚Üê Back to Home</a>
                    <a href="/Home/Invoices" class="btn btn-secondary">View All Invoices</a>
                </div>
            </div>
        }
        else if (Model != null)
        {
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h2><i class="fas fa-file-invoice me-2"></i>Invoice Details</h2>
                <div>
                    <a href="@Url.Action("Invoices", "Home")" class="btn btn-outline-secondary">
                        <i class="fas fa-arrow-left me-2"></i>Back to List
                    </a>
                    <div class="btn-group" role="group">
                        <a href="/api/invoices/@Model.InvoiceID/file" target="_blank" class="btn btn-primary">
                            <i class="fas fa-eye me-2"></i>View Original
                        </a>
                        <a href="/api/invoices/@Model.InvoiceID/file" download class="btn btn-outline-primary">
                            <i class="fas fa-download me-2"></i>Download
                        </a>
                    </div>
                    
                    @* Approval Controls *@
                    @if (!Model.Approved)
                    {
                        <div class="btn-group ms-2" role="group">
                            <button type="button" class="btn btn-success" onclick="approveInvoice(@Model.InvoiceID)">
                                <i class="fas fa-check me-2"></i>Approve
                            </button>
                            <button type="button" class="btn btn-danger" onclick="rejectInvoice(@Model.InvoiceID)">
                                <i class="fas fa-times me-2"></i>Reject
                            </button>
                        </div>
                    }
                    else
                    {
                        <span class="badge bg-success fs-6 ms-2">
                            <i class="fas fa-check me-1"></i>Approved
                        </span>
                    }
                </div>
            </div>

            <!-- Invoice Header -->
            <div class="card mb-4">
                <div class="card-header bg-primary text-white">
                    <h4 class="mb-0">Invoice Information</h4>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-6">
                            <table class="table table-borderless">
                                <tr>
                                    <td><strong>Invoice Number:</strong></td>
                                    <td>@Model.InvoiceNumber</td>
                                </tr>
                                <tr>
                                    <td><strong>Vehicle ID:</strong></td>
                                    <td><span class="badge bg-secondary fs-6">@Model.VehicleID</span></td>
                                </tr>
                                <tr>
                                    <td><strong>Invoice Date:</strong></td>
                                    <td>@Model.InvoiceDate.ToString("MMMM dd, yyyy")</td>
                                </tr>
                                @if (Model.Odometer.HasValue)
                                {
                                    <tr>
                                        <td><strong>Odometer:</strong></td>
                                        <td>@Model.Odometer.Value.ToString("N0") miles</td>
                                    </tr>
                                }
                                @if (!string.IsNullOrEmpty(Model.Description))
                                {
                                    <tr>
                                        <td><strong>Description:</strong></td>
                                        <td>
                                            <div class="text-muted">
                                                <i class="fas fa-robot me-1"></i>
                                                @Model.Description
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </table>
                        </div>
                        <div class="col-md-6">
                            <table class="table table-borderless">
                                <tr>
                                    <td><strong>Total Cost:</strong></td>
                                    <td><h5 class="text-success mb-0">$@Model.TotalCost.ToString("N2")</h5></td>
                                </tr>
                                <tr>
                                    <td><strong>Parts Cost:</strong></td>
                                    <td><span class="fs-5">$@Model.TotalPartsCost.ToString("N2")</span></td>
                                </tr>
                                <tr>
                                    <td><strong>Labor Cost:</strong></td>
                                    <td><span class="fs-5">$@Model.TotalLaborCost.ToString("N2")</span></td>
                                </tr>
                                @if (Model.ConfidenceScore.HasValue)
                                {
                                    <tr>
                                        <td><strong>Confidence Score:</strong></td>
                                        <td>
                                            @{
                                                var confidence = Model.ConfidenceScore.Value;
                                                var badgeClass = confidence >= 90 ? "bg-success" : confidence >= 75 ? "bg-warning" : "bg-danger";
                                            }
                                            <span class="badge @badgeClass fs-6">@confidence.ToString("F1")%</span>
                                        </td>
                                    </tr>
                                }
                                <tr>
                                    <td><strong>Processed:</strong></td>
                                    <td>@Model.CreatedAt.ToString("MMMM dd, yyyy HH:mm")</td>
                                </tr>
                                @if (Model.Approved)
                                {
                                    <tr>
                                        <td><strong>Approval Status:</strong></td>
                                        <td><span class="badge bg-success fs-6">Approved</span></td>
                                    </tr>
                                    <tr>
                                        <td><strong>Approved By:</strong></td>
                                        <td>@Model.ApprovedBy</td>
                                    </tr>
                                    <tr>
                                        <td><strong>Approved At:</strong></td>
                                        <td>@Model.ApprovedAt?.ToString("MMMM dd, yyyy HH:mm")</td>
                                    </tr>
                                }
                                else
                                {
                                    <tr>
                                        <td><strong>Approval Status:</strong></td>
                                        <td><span class="badge bg-warning fs-6">Pending Approval</span></td>
                                    </tr>
                                }
                            </table>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Line Items -->
            <div class="card">
                <div class="card-header bg-secondary text-white d-flex justify-content-between align-items-center">
                    <h4 class="mb-0">Line Items</h4>
                    <span class="badge bg-light text-dark">@Model.LineItems.Count items</span>
                </div>
                <div class="card-body">
                    @if (Model.LineItems.Any())
                    {
                        <div class="table-responsive">
                            <table class="table table-hover">
                                <thead class="table-light">
                                    <tr>
                                        <th width="5%">#</th>
                                        <th width="30%">Description</th>
                                        <th width="12%">Category</th>
                                        <th width="10%">Unit Cost</th>
                                        <th width="8%">Qty</th>
                                        <th width="12%">Line Total</th>
                                        <th width="10%">Part Number</th>
                                        <th width="13%">Confidence</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var line in Model.LineItems.OrderBy(l => l.LineNumber))
                                    {
                                        <tr>
                                            <td><strong>@line.LineNumber</strong></td>
                                            <td>@line.Description</td>
                                            <td>
                                                @if (!string.IsNullOrEmpty(line.Category))
                                                {
                                                    var categoryClass = line.Category switch 
                                                    {
                                                        "Part" => "bg-primary",
                                                        "Parts" => "bg-primary",
                                                        "Labor" => "bg-warning text-dark",
                                                        "Tax" => "bg-info",
                                                        "Fee" => "bg-secondary",
                                                        "Unclassified" => "bg-danger",
                                                        _ => "bg-light text-dark"
                                                    };
                                                    <span class="badge @categoryClass">@line.Category</span>
                                                }
                                            </td>
                                            <td>$@line.UnitCost.ToString("N2")</td>
                                            <td>@line.Quantity.ToString("N1")</td>
                                            <td><strong>$@line.TotalLineCost.ToString("N2")</strong></td>
                                            <td>
                                                @if (!string.IsNullOrEmpty(line.PartNumber))
                                                {
                                                    <code>@line.PartNumber</code>
                                                }
                                                else
                                                {
                                                    <span class="text-muted">-</span>
                                                }
                                            </td>
                                            <td>
                                                @if (line.ClassificationConfidence.HasValue)
                                                {
                                                    var classConfidence = line.ClassificationConfidence.Value; // Use value as-is (already a percentage as decimal)
                                                    var classBadgeClass = classConfidence >= 0.90m ? "bg-success" : classConfidence >= 0.75m ? "bg-warning" : "bg-danger";
                                                    <div>
                                                        <span class="badge @classBadgeClass">@((classConfidence * 100).ToString("F0"))%</span>
                                                        <br />
                                                        <small class="text-muted">Classification</small>
                                                    </div>
                                                }
                                                else if (line.ConfidenceScore.HasValue)
                                                {
                                                    var lineConfidence = line.ConfidenceScore.Value;
                                                    var lineBadgeClass = lineConfidence >= 90 ? "bg-success" : lineConfidence >= 75 ? "bg-warning" : "bg-danger";
                                                    <div>
                                                        <span class="badge @lineBadgeClass">@lineConfidence.ToString("F0")%</span>
                                                        <br />
                                                        <small class="text-muted">Extraction</small>
                                                    </div>
                                                }
                                                else
                                                {
                                                    <span class="text-muted">-</span>
                                                }
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                                <tfoot class="table-light">
                                    <tr>
                                        <th colspan="5" class="text-end">Total:</th>
                                        <th>$@Model.LineItems.Sum(l => l.TotalLineCost).ToString("N2")</th>
                                        <th colspan="2"></th>
                                    </tr>
                                </tfoot>
                            </table>
                        </div>

                        <!-- Summary Cards -->
                        <div class="row mt-4">
                            <div class="col-md-3">
                                <div class="card text-center">
                                    <div class="card-body">
                                        <i class="fas fa-cogs fa-2x text-primary mb-2"></i>
                                        <h6>Parts</h6>
                                        <h5 class="text-primary">$@Model.LineItems.Where(l => l.Category == "Part" || l.Category == "Parts").Sum(l => l.TotalLineCost).ToString("N2")</h5>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="card text-center">
                                    <div class="card-body">
                                        <i class="fas fa-wrench fa-2x text-warning mb-2"></i>
                                        <h6>Labor</h6>
                                        <h5 class="text-warning">$@Model.LineItems.Where(l => l.Category == "Labor").Sum(l => l.TotalLineCost).ToString("N2")</h5>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="card text-center">
                                    <div class="card-body">
                                        <i class="fas fa-receipt fa-2x text-info mb-2"></i>
                                        <h6>Tax & Fees</h6>
                                        <h5 class="text-info">$@Model.LineItems.Where(l => l.Category == "Tax" || l.Category == "Fee").Sum(l => l.TotalLineCost).ToString("N2")</h5>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="card text-center">
                                    <div class="card-body">
                                        <i class="fas fa-list fa-2x text-secondary mb-2"></i>
                                        <h6>Total Items</h6>
                                        <h5 class="text-secondary">@Model.LineItems.Count</h5>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="text-center py-4">
                            <i class="fas fa-inbox fa-3x text-muted mb-3"></i>
                            <h5 class="text-muted">No line items found</h5>
                            <p class="text-muted">This invoice may not have detailed line item information.</p>
                        </div>
                    }
                </div>
            </div>

            <!-- API Info -->
            <div class="card mt-4">
                <div class="card-header">
                    <h5 class="mb-0"><i class="fas fa-code me-2"></i>API Access</h5>
                </div>
                <div class="card-body">
                    <p class="mb-3">Access this invoice and its original file via API:</p>
                    <div class="row mb-2">
                        <div class="col-md-6">
                            <strong>Invoice Data:</strong><br />
                            <code>GET /api/invoices/@Model.InvoiceID</code>
                        </div>
                        <div class="col-md-6 text-end">
                            <a href="/api/invoices/@Model.InvoiceID" target="_blank" class="btn btn-sm btn-outline-primary">
                                <i class="fas fa-external-link-alt me-1"></i>Try API
                            </a>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <strong>Original File Access:</strong><br />
                            <code>GET /api/invoices/@Model.InvoiceID/file</code>
                        </div>
                        <div class="col-md-6 text-end">
                            <a href="/api/invoices/@Model.InvoiceID/file" target="_blank" class="btn btn-sm btn-outline-success">
                                <i class="fas fa-file-alt me-1"></i>Access File
                            </a>
                        </div>
                    </div>
                    <div class="mt-3">
                        <small class="text-muted">
                            <i class="fas fa-info-circle me-1"></i>
                            File access URLs are secure and expire after 1 hour for security purposes.
                        </small>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@section Scripts {
    <script>
        // Approve invoice function
        async function approveInvoice(invoiceId) {
            const approverName = prompt("Enter your name for approval:");
            
            if (!approverName || approverName.trim() === '') {
                alert('Approver name is required.');
                return;
            }

            if (!confirm(`Are you sure you want to approve this invoice?\n\nThis action will mark the invoice as approved for payment.`)) {
                return;
            }

            try {
                const response = await fetch(`/api/invoices/${invoiceId}/approve`, {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        approvedBy: approverName.trim()
                    })
                });

                const result = await response.json();

                if (response.ok && result.success) {
                    alert(`Success: ${result.message}`);
                    location.reload(); // Refresh the page to show updated status
                } else {
                    alert(`Error: ${result.message || 'Failed to approve invoice'}`);
                }
            } catch (error) {
                console.error('Error approving invoice:', error);
                alert('An error occurred while approving the invoice. Please try again.');
            }
        }

        // Reject invoice function
        async function rejectInvoice(invoiceId) {
            const confirmed = confirm(`Are you sure you want to REJECT this invoice?\n\n‚ö†Ô∏è WARNING: This action will PERMANENTLY DELETE the invoice and its associated file from the system.\n\nThis action cannot be undone.`);
            
            if (!confirmed) {
                return;
            }

            // Double confirmation for destructive action
            const doubleConfirm = confirm(`FINAL CONFIRMATION:\n\nYou are about to permanently delete this invoice and its file.\n\nType YES to confirm this destructive action.`);
            
            if (!doubleConfirm) {
                return;
            }

            try {
                const response = await fetch(`/api/invoices/${invoiceId}/reject`, {
                    method: 'DELETE',
                    headers: {
                        'Content-Type': 'application/json',
                    }
                });

                const result = await response.json();

                if (response.ok && result.success) {
                    alert(`Success: ${result.message}`);
                    // Redirect to invoice list since the invoice is deleted
                    window.location.href = '/Home/Invoices';
                } else {
                    alert(`Error: ${result.message || 'Failed to reject invoice'}`);
                }
            } catch (error) {
                console.error('Error rejecting invoice:', error);
                alert('An error occurred while rejecting the invoice. Please try again.');
            }
        }
    </script>
}
